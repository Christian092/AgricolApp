
@model IPagedList<ProyectoV1.Models.ordena>
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Template.cshtml";
    var grid = new WebGrid(source: Model, canPage: false);
}

<h2>Ordeñas</h2>
<hr />
<div>
    @using (Html.BeginForm("Index", "Ordena"))
    {
        <div class="alert alert-warning contac2">
            <h4 align="center">Buscar por Fecha</h4>
            <div class="form-group contac2">
                

                <div class="col-xs-12">
                    <div align="center"><h6><font color="red">@ViewBag.Error</font></h6></div>
                    @Html.Label("Desde")
                    @Html.TextBox("fecha1", "", new { @class = "form-control", type = "date" })
                    <br />
                    @Html.Label("Hasta")
                    @Html.TextBox("fecha2", "", new { @class = "form-control", type = "date" })
                    
                    
                </div>
                
            </div>
            <div align="center">
                <button type="submit" id="buscar" class="btn btn-success glyphicon glyphicon-search"> Buscar</button>
            </div>
        </div>
    }
          
            <div class="contac">
                <table class="table table-hover" style="width:auto">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.First().fecha)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().litros)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().jornada)
                        </th>
                        <th>
                            Lecheria
                            @*@Html.DisplayNameFor(model => model.First().lecheria.id)*@
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.fecha)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.litros)
                            </td>
                            <td>
                                @{

                                    var jornada = "";
                                    if (item.jornada.Equals("M"))
                                    {
                                        jornada = "Mañana";

                                    };
                                    if (item.jornada.Equals("T"))
                                    {
                                        jornada = "Tarde";

                                    };

                                }
                                @jornada
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.lecheria.id)
                            </td>
                            <td>
                                @Html.ActionLink(" ", "Edit", new { id = item.id }, htmlAttributes: new { @class = "btn btn-success glyphicon glyphicon-pencil" })

                                @Html.ActionLink(" ", "Details", new { id = item.id }, htmlAttributes: new { @class = "btn btn-info glyphicon glyphicon-zoom-in" })

                                @Html.ActionLink(" ", "Delete", new { id = item.id }, htmlAttributes: new { @class = "btn btn-danger glyphicon glyphicon-trash" })
                            </td>
                        </tr>
                    }

                </table>
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
                @Html.ActionLink(" Exportar a Excel", "GetExcel", "Ordena", htmlAttributes: new { @class = "btn btn-success glyphicon glyphicon-export" })
                @Html.ActionLink(" Añadir Ordeña", "Create", " ", htmlAttributes: new { @class = "btn btn-primary glyphicon glyphicon-plus " })
            </div>


        </div>

<style>
    .contac {
        float: left;
    }

    .contac2 {
        float: right;
    }

    
</style>
@{
    var message = TempData["notice"] ?? string.Empty;
}

<script type="text/javascript">

    var message = '@message';
    //if (message)
    //    sweetAlert({
    //        message,
    //        title: message,
    //        text: "La Alerta se Cerrará en 20 Segundos o Presiona el Botón",
    //        imageUrl: "/Content/Image/images.png",
    //        timer: 20000,
    //        animation: true,
    //        showConfirmButton: true
    //    });
    if (message)
    {
        alert(message);
    }
    
</script>